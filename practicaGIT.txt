Practica GIT

EJERCICIO 1
1.1 cbermejo@beta08:~/ISI$ mkdir ejercicio-1
    cbermejo@beta08:~/ISI$ cd ejercicio-1
    cbermejo@beta08:~/ISI/ejercicio-1$ git init
    Initialized empty Git repository in /home/alumnos/cbermejo/ISI/ejercicio-1/.git/

1.2 touch f1 f2

1.3 git add f1 f2 añade los ficheros a tracked files (Tambien añade al stage una copia del estado actual de un fichero)
    git commit -m "creados f1, f2."

1.4 alias gitgraph="git log --all --decorate --oneline --graph"
    gitgraph

1.5 echo "hola" > f1

1.6 git add f1
    git commit -m "C2: f1 ahora contiene 'hola'"

1.7 git rm f2
    git commit -m "C3: borrado f2"

1.8 git log
    git ls-tree 6ed1dbc6cba24708f02ef0118deea6bdb8fa4072
    git cat-file -p e69de29bb2d1d6434b8b29ae775ad8c2e48c5391 > f2

1.9 git add f2
    echo adios >> f1
    git add f1
    git commit --amend -m "C3: modificado f1"

EJERCICIO 2
2.1 mkdir ejercicio-2
    cd ejercicio-2
    git init

2.2 cat <<EOT >> s1
    > Leche
    > Tomate pelado
    > Tomate ecológico
    > Queso
    > Yoghourt griego
    > EOT
    git add s1
    git commit -m "C1: añadido s1"

2.3 cat s1 >> s2
    echo "Pan" >> s2

2.4 vim s1 (shift+i para insertar y borramos Queso, :wq)

2.5 git add s1 (añadir al stage area)
    git add s2

2.6 git diff (stage area almacena el estado de los tracked files que serán
              comprometidos al repositorio)
    Ninguna diferencia

2.7 git diff --staged (las versiones que hay en HEAD es el ultimo commit de la rama)
                        diff --git a/s1 b/s1
                         Leche
                         Tomate pelado
                         Tomate ecológico
                        -Queso
                         Yoghourt griego
                        diff --git a/s2 b/s2
                        +Leche
                        +Tomate pelado
                        +Tomate ecológico
                        +Queso
                        +Yoghourt griego
                        +Pan

2.8 git commit -m "C2: s1 no tiene queso, s2 tiene pan"

2.9 git log -p (ver cambios de los ficheros en todos los commits)

2.10 git rm s2
     git commit -m "C3: borrado s2"

2.11 echo -n > s1

2.12 diferencias entre area de trabajo y stage area
     git diff (-Leche
               -Tomate pelado
               -Tomate ecológico
               -Yoghourt griego)


2.13 miramos en git status
     git checkout -- s1 (descarta cambios en el directorio de trabajo comparando
                         con el stage area)

2.14 git diff (no hay diferencias)

2.15 echo Fregona >> s1

2.16 git add s1

2.17 git diff (no hay diferencias, acabo de añadir del area de trabajo al stage en 2.16)

2.18 git diff --staged (para ver diferencias entre commited y stage area)
      +Fregona

2.19 a) git checkout HEAD s1
     b) git diff --staged, git diff, git status
     c) ya son iguales, con el a) te trae de HEAD a stage y a working area
     d) git diff --staged, git diff, git status

2.20 git diff --staged, git diff, git status, gitgraph

2.21 git log
     git ls-tree 7d02ae4fe0693242444b62bf310a4193487aa14c
     git cat-file -p ae0c9c08cbb5d24a31831ad283c9ea270c60cbcc > s2

2.22 git add s2

2.23 touch p1.java p2.java

2.24 touch log1.log

2.25 mkdir logs
     cd logs
     touch log1.log log2.log

2.26 touch .gitignore
     *.java
     logs/*.log

2.27 git add . (añade todo lo que haya cambiado)

2.28 comprobamos que solo estan en stage area git status, los ficheros
     .gitignore y log1.log

2.29 git commit -m "C5: añadidos .gitignore y log1.log"

EJERCICIO 3
3.1 mkdir ejercicio-3
    cd ejercicio-3
    git init

3.2 cat <<EOT >> s1
    > Leche
    > Tomate pelado
    > Tomate ecológico
    > Queso
    > Yoghourt griego

3.3 git add s1
    git commit -m "C1: creado s1"

3.4 cat s1 > s2

3.5 git add s2
    git commit -m "C2: creado s2"

3.6 git branch devel

3.7 git branch bugFix

3.8 gitgraph
    * 6ba8ad1 (HEAD -> master, devel, bugFix) C2: creado s2
    * f0d7749 C1: creado s1
    git branch
      bugFix
      devel
    * master

3.9 git checkout devel
Switched to branch 'devel'
git branch
  bugFix
* devel
  master
gitgraph
* 6ba8ad1 (HEAD -> devel, master, bugFix) C2: creado s2
* f0d7749 C1: creado s1

3.10 echo Fregona >> s1

3.11 git add s1
     git commit -m "C3: añadida Fregona"

3.12 cat s1
Leche
Tomate pelado
Tomate ecológico
Queso
Yoghourt griego
Fregona

3.13 git checkout bugFix
     gitgraph
     * da2eda7 (devel) C3: añadida Fregona
     * 6ba8ad1 (HEAD -> bugFix, master) C2: creado s2
     * f0d7749 C1: creado s1

3.14 cat s1
Leche
Tomate pelado
Tomate ecológico
Queso
Yoghourt griego

3.15 git checkout devel

3.16 cat s1
Leche
Tomate pelado
Tomate ecológico
Queso
Yoghourt griego
Fregona

3.17 git checkout bugFix

3.18 vim s1

3.19 git log
    commit 6ba8ad1c666e850e363bf1cd2e2485ba07d63e54
    Author: ChristianBermejoGuerrero <cbermejog7@gmail.com>
    Date:   Tue Oct 24 13:35:42 2017 +0200

        C2: creado s2

    commit f0d77497a42e833f8f3fa44363b719858884d067
    Author: ChristianBermejoGuerrero <cbermejog7@gmail.com>
    Date:   Tue Oct 24 13:33:48 2017 +0200

        C1: creado s1
    cbermejo@cbg:~/Escritorio/practicaISI-GIT/ejercicio-3$ gitgraph
    * da2eda7 (devel) C3: añadida Fregona
    * 6ba8ad1 (HEAD -> bugFix, master) C2: creado s2
    * f0d7749 C1: creado s1
    cbermejo@cbg:~/Escritorio/practicaISI-GIT/ejercicio-3$ git status
    En la rama bugFix
    Cambios no preparados para el commit:
      (use «git add <archivo>...» para actualizar lo que se confirmará)
      (use «git checkout -- <archivo>...» para descartar cambios en el directorio de trabajo)

    	modificado:    s1

    no hay cambios agregados al commit (use «git add» o «git commit -a»)
    cbermejo@cbg:~/Escritorio/practicaISI-GIT/ejercicio-3$ git diff
    diff --git a/s1 b/s1
    -Leche
    +Leche desnatada
     Tomate pelado
     Tomate ecológico
     Queso

3.20 git add s1
     git commit -m "C4: Cambiada Leche por Leche desnatada"

    gitgraph
    * 1a45bcc (HEAD -> bugFix) C4: Cambiada Leche por Leche desnatada
    | * da2eda7 (devel) C3: añadida Fregona
    |/
    * 6ba8ad1 (master) C2: creado s2
    * f0d7749 C1: creado s1

MERGE CON FAST FORWARD

1.  git status
    En la rama bugFix
    nothing to commit, working directory clean
    cbermejo@cbg:~/Escritorio/practicaISI-GIT/ejercicio-3$ git log
    commit 1a45bcc09b214c727fe26041e7cb2f8bd55343eb
    Author: ChristianBermejoGuerrero <cbermejog7@gmail.com>
    Date:   Tue Oct 24 14:10:56 2017 +0200

        C4: Cambiada Leche por Leche desnatada

    commit 6ba8ad1c666e850e363bf1cd2e2485ba07d63e54
    Author: ChristianBermejoGuerrero <cbermejog7@gmail.com>
    Date:   Tue Oct 24 13:35:42 2017 +0200

        C2: creado s2

    commit f0d77497a42e833f8f3fa44363b719858884d067
    Author: ChristianBermejoGuerrero <cbermejog7@gmail.com>
    Date:   Tue Oct 24 13:33:48 2017 +0200

        C1: creado s1
    cbermejo@cbg:~/Escritorio/practicaISI-GIT/ejercicio-3$ git diff
    cbermejo@cbg:~/Escritorio/practicaISI-GIT/ejercicio-3$ git diff --staged
    cbermejo@cbg:~/Escritorio/practicaISI-GIT/ejercicio-3$ gitgraph
    * 1a45bcc (HEAD -> bugFix) C4: Cambiada Leche por Leche desnatada
    | * da2eda7 (devel) C3: añadida Fregona
    |/
    * 6ba8ad1 (master) C2: creado s2
    * f0d7749 C1: creado s1

2. git checkout master
git branch
bugFix
devel
* master

3. git diff master..devel
diff --git a/s1 b/s1
index 5aad170..494122a 100644
--- a/s1
+++ b/s1
@@ -3,3 +3,4 @@ Tomate pelado
 Tomate ecológico
 Queso
 Yoghourt griego
+Fregona

4. gitgraph
* 1a45bcc (bugFix) C4: Cambiada Leche por Leche desnatada
| * da2eda7 (devel) C3: añadida Fregona
|/
* 6ba8ad1 (HEAD -> master) C2: creado s2
* f0d7749 C1: creado s1

5. git merge devel
Updating 6ba8ad1..da2eda7
Fast-forward
 s1 | 1 +
 1 file changed, 1 insertion(+)

6. gitgraph
 * 1a45bcc (bugFix) C4: Cambiada Leche por Leche desnatada
 | * da2eda7 (HEAD -> master, devel) C3: añadida Fregona
 |/
 * 6ba8ad1 C2: creado s2
 * f0d7749 C1: creado s1

 git log
 commit da2eda7e4527d8958303e41041bc58d540b34141
 Author: ChristianBermejoGuerrero <cbermejog7@gmail.com>
 Date:   Tue Oct 24 13:42:47 2017 +0200

     C3: añadida Fregona

 commit 6ba8ad1c666e850e363bf1cd2e2485ba07d63e54
 Author: ChristianBermejoGuerrero <cbermejog7@gmail.com>
 Date:   Tue Oct 24 13:35:42 2017 +0200

     C2: creado s2

 commit f0d77497a42e833f8f3fa44363b719858884d067
 Author: ChristianBermejoGuerrero <cbermejog7@gmail.com>
 Date:   Tue Oct 24 13:33:48 2017 +0200

     C1: creado s1
NO se ha hecho un commit para la mezcla, se ha hecho un fast-forward

7. cat s1
Leche
Tomate pelado
Tomate ecológico
Queso
Yoghourt griego
Fregona

BORRAR RAMAS

1. git branch --merged (comprobar que ramas estan mexcladas con la rama en la que estas ahora mismo-->master)
devel
* master

2. git branch -d devel
Eliminada la rama devel (era da2eda7)ç

3.gitgraph
* 1a45bcc (bugFix) C4: Cambiada Leche por Leche desnatada
| * da2eda7 (HEAD -> master) C3: añadida Fregona
|/
* 6ba8ad1 C2: creado s2
* f0d7749 C1: creado s1

4. git branch -d bugFix
error: The branch 'bugFix' is not fully merged.
If you are sure you want to delete it, run 'git branch -D bugFix'.

MERGE A 3 BANDAS CON CONFLICTO RESUELTO POR GIT

1. no borramos bugFix

2. git merge bugFix

3.gitgraph
*   d216140 (HEAD -> master) C5: Merge branch 'bugFix'
|\
| * 1a45bcc (bugFix) C4: Cambiada Leche por Leche desnatada
* | da2eda7 C3: añadida Fregona
|/
* 6ba8ad1 C2: creado s2
* f0d7749 C1: creado s1

4. cat s1
Leche desnatada
Tomate pelado
Tomate ecológico
Queso
Yoghourt griego
Fregona

5. git branch -d bugFix
Eliminada la rama bugFix (era 1a45bcc)

MERGE A 3 BANDAS CON CONFLICTO QUE REQUIERE SOLUCION MANUAL

1. git branch  new-feature
cbermejo@cbg:~/Escritorio/practicaISI-GIT/ejercicio-3$ git branch
* master
  new-feature
cbermejo@cbg:~/Escritorio/practicaISI-GIT/ejercicio-3$ git checkout new-feature
Switched to branch 'new-feature'
cbermejo@cbg:~/Escritorio/practicaISI-GIT/ejercicio-3$ git branch
  master
* new-feature

2. vim s1
cat s1
Tomate pelado
Tomate Orlando
Queso
Yoghourt griego
Fregona

3. git diff
diff --git a/s1 b/s1
index e51ea94..b476152 100644
--- a/s1
+++ b/s1
@@ -1,6 +1,5 @@
-Leche desnatada
 Tomate pelado
-Tomate ecológico
+Tomate Orlando
 Queso
 Yoghourt griego
 Fregona
cbermejo@cbg:~/Escritorio/practicaISI-GIT/ejercicio-3$ git diff --staged

4. git add s1

5. git diff
cbermejo@cbg:~/Escritorio/practicaISI-GIT/ejercicio-3$ git diff --staged
diff --git a/s1 b/s1
index e51ea94..b476152 100644
--- a/s1
+++ b/s1
@@ -1,6 +1,5 @@
-Leche desnatada
 Tomate pelado
-Tomate ecológico
+Tomate Orlando
 Queso
 Yoghourt griego
 Fregona

6. git commit -m "C6"
gitgraph
* 3bcfcf3 (HEAD -> new-feature) C6: borrada Leche desnatada, cambiado Tomate ecológico por Tomate Orlando
*   d216140 (master) C5: Merge branch 'bugFix'
|\
| * 1a45bcc C4: Cambiada Leche por Leche desnatada
* | da2eda7 C3: añadida Fregona
|/
* 6ba8ad1 C2: creado s2
* f0d7749 C1: creado s1

7. git checkout master

8. git vim s1

9. git add s1
cbermejo@cbg:~/Escritorio/practicaISI-GIT/ejercicio-3$ git commit -m "C7: cambiado Yoghourt griego por Yoghourt y eliminado Tomate ecológico"
[master 9c0efad] C7: cambiado Yoghourt griego por Yoghourt y eliminado Tomate ecológico
 1 file changed, 1 insertion(+), 2 deletions(-)
cbermejo@cbg:~/Escritorio/practicaISI-GIT/ejercicio-3$ git log
commit 9c0efadebdb65a80e8b98876d654faf8fea82fcf
Author: ChristianBermejoGuerrero <cbermejog7@gmail.com>
Date:   Tue Oct 24 16:08:09 2017 +0200

    C7: cambiado Yoghourt griego por Yoghourt y eliminado Tomate ecológico

commit d2161409dd7425b571a7abd2a5d7560378cd729f
Merge: da2eda7 1a45bcc
Author: ChristianBermejoGuerrero <cbermejog7@gmail.com>
Date:   Tue Oct 24 15:50:25 2017 +0200

    C5: Merge branch 'bugFix'

commit 1a45bcc09b214c727fe26041e7cb2f8bd55343eb
Author: ChristianBermejoGuerrero <cbermejog7@gmail.com>
Date:   Tue Oct 24 14:10:56 2017 +0200

    C4: Cambiada Leche por Leche desnatada

commit da2eda7e4527d8958303e41041bc58d540b34141
Author: ChristianBermejoGuerrero <cbermejog7@gmail.com>
Date:   Tue Oct 24 13:42:47 2017 +0200

    C3: añadida Fregona

commit 6ba8ad1c666e850e363bf1cd2e2485ba07d63e54
Author: ChristianBermejoGuerrero <cbermejog7@gmail.com>
Date:   Tue Oct 24 13:35:42 2017 +0200

    C2: creado s2

commit f0d77497a42e833f8f3fa44363b719858884d067
Author: ChristianBermejoGuerrero <cbermejog7@gmail.com>
Date:   Tue Oct 24 13:33:48 2017 +0200

    C1: creado s1
10. gitgraph
* 9c0efad (HEAD -> master) C7: cambiado Yoghourt griego por Yoghourt y eliminado Tomate ecológico
| * 3bcfcf3 (new-feature) C6: borrada Leche desnatada, cambiado Tomate ecológico por Tomate Orlando
|/
*   d216140 C5: Merge branch 'bugFix'
|\
| * 1a45bcc C4: Cambiada Leche por Leche desnatada
* | da2eda7 C3: añadida Fregona
|/
* 6ba8ad1 C2: creado s2
* f0d7749 C1: creado s1

11. git merge new-feature
Automezclado s1
CONFLICTO(contenido): conflicto de fusión en s1
Automatic merge failed; fix conflicts and then commit the result.

12. gitgraph
* 9c0efad (HEAD -> master) C7: cambiado Yoghourt griego por Yoghourt y eliminado Tomate ecológico
| * 3bcfcf3 (new-feature) C6: borrada Leche desnatada, cambiado Tomate ecológico por Tomate Orlando
|/
*   d216140 C5: Merge branch 'bugFix'
|\
| * 1a45bcc C4: Cambiada Leche por Leche desnatada
* | da2eda7 C3: añadida Fregona
|/
* 6ba8ad1 C2: creado s2
* f0d7749 C1: creado s1

cat s1
Tomate pelado
<<<<<<< HEAD
=======
Tomate Orlando
>>>>>>> new-feature
Queso
Yoghourt
Fregona

git checkout new-feature
s1: needs merge
error: you need to resolve your current index first

git merge --abort
cbermejo@cbg:~/Escritorio/practicaISI-GIT/ejercicio-3$ cat s1
Leche desnatada
Tomate pelado
Queso
Yoghourt
Fregona

13. gitgraph
* 9c0efad (HEAD -> master) C7: cambiado Yoghourt griego por Yoghourt y eliminado Tomate ecológico
| * 3bcfcf3 (new-feature) C6: borrada Leche desnatada, cambiado Tomate ecológico por Tomate Orlando
|/
*   d216140 C5: Merge branch 'bugFix'
|\
| * 1a45bcc C4: Cambiada Leche por Leche desnatada
* | da2eda7 C3: añadida Fregona
|/
* 6ba8ad1 C2: creado s2
* f0d7749 C1: creado s1

14. git merge new-feature
Automezclado s1
CONFLICTO(contenido): conflicto de fusión en s1
Automatic merge failed; fix conflicts and then commit the result.

git status
En la rama master
Tiene rutas sin fusionar.
  (solucione los conflictos y ejecute «git commit»)

Rutas no combinadas:
  (use «git add <archivo>...» para marcar resolución)

	modificado por ambos:   s1

15. git checkout --ours s1
git checkout --theirs s1

16. gitgraph
*   4280f65 (HEAD -> master) C8: resuelto conflicto manualmente
|\
| * 3bcfcf3 (new-feature) C6: borrada Leche desnatada, cambiado Tomate ecológico por Tomate Orlando
* | 9c0efad C7: cambiado Yoghourt griego por Yoghourt y eliminado Tomate ecológico
|/
*   d216140 C5: Merge branch 'bugFix'
|\
| * 1a45bcc C4: Cambiada Leche por Leche desnatada
* | da2eda7 C3: añadida Fregona
|/
* 6ba8ad1 C2: creado s2
* f0d7749 C1: creado s1

17. git branch -d new-feature (es seguro borrar)
Eliminada la rama new-feature (era 3bcfcf3)

18. Ya esta borrada

19. gitgraph
*   4280f65 (HEAD -> master) C8: resuelto conflicto manualmente
|\
| * 3bcfcf3 C6: borrada Leche desnatada, cambiado Tomate ecológico por Tomate Orlando
* | 9c0efad C7: cambiado Yoghourt griego por Yoghourt y eliminado Tomate ecológico
|/
*   d216140 C5: Merge branch 'bugFix'
|\
| * 1a45bcc C4: Cambiada Leche por Leche desnatada
* | da2eda7 C3: añadida Fregona
|/
* 6ba8ad1 C2: creado s2
* f0d7749 C1: creado s1

HEAD DETACHED

1. git checkout 6ba8ad1c666e850e363bf1cd2e2485ba07d63e54
Note: checking out '6ba8ad1c666e850e363bf1cd2e2485ba07d63e54'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b <new-branch-name>

HEAD se encuentra en 6ba8ad1... C2: creado s2 (esta DETACHED)

gitgraph
*   4280f65 (master) C8: resuelto conflicto manualmente
|\
| * 3bcfcf3 C6: borrada Leche desnatada, cambiado Tomate ecológico por Tomate Orlando
* | 9c0efad C7: cambiado Yoghourt griego por Yoghourt y eliminado Tomate ecológico
|/
*   d216140 C5: Merge branch 'bugFix'
|\
| * 1a45bcc C4: Cambiada Leche por Leche desnatada
* | da2eda7 C3: añadida Fregona
|/
* 6ba8ad1 (HEAD) C2: creado s2
* f0d7749 C1: creado s1

2. git checkout master
gitgraph
*   4280f65 (HEAD -> master) C8: resuelto conflicto manualmente
|\
| * 3bcfcf3 C6: borrada Leche desnatada, cambiado Tomate ecológico por Tomate Orlando
* | 9c0efad C7: cambiado Yoghourt griego por Yoghourt y eliminado Tomate ecológico
|/
*   d216140 C5: Merge branch 'bugFix'
|\
| * 1a45bcc C4: Cambiada Leche por Leche desnatada
* | da2eda7 C3: añadida Fregona
|/
* 6ba8ad1 C2: creado s2
* f0d7749 C1: creado s1

3. git checkout 6ba8ad1c666e850e363bf1cd2e2485ba07d63e54

4. git add s1
cbermejo@beta08:~/ISI/practicaISI-GIT/ejercicio-3$ git status
HEAD detached at 6ba8ad1
Cambios para hacer commit:
  (use «git reset HEAD <archivo>...» para sacar del stage)

	modificado:    s1

git commit -m "C9: Añadido Patatas a s1"

5. gitgraph
* 92a5004 (HEAD) C9: Añadido Patatas a s1
| *   4280f65 (master) C8: resuelto conflicto manualmente
| |\
| | * 3bcfcf3 C6: borrada Leche desnatada, cambiado Tomate ecológico por Tomate Orlando
| * | 9c0efad C7: cambiado Yoghourt griego por Yoghourt y eliminado Tomate ecológico
| |/
| *   d216140 C5: Merge branch 'bugFix'
| |\
| | * 1a45bcc C4: Cambiada Leche por Leche desnatada
| |/
|/|
| * da2eda7 C3: añadida Fregona
|/
* 6ba8ad1 C2: creado s2
* f0d7749 C1: creado s1

(ES ALTA LA PROBABILIDAD DE QUE ACABES PERDIENDO EL COMMIT QUE HAS HECHO AL ESTAR
EN DETACHED, PORQUE EL COMMIT NO ESTA EN NINGUNA RAMA. SI AHORA NOS CAMBIASEMOS
A OTRA RAMA PODRÍAMOS PERDER EL COMMIT)

6. git branch stage
git branch
* (HEAD detached from 6ba8ad1)
  master
  stage
  gitgraph
  * 92a5004 (HEAD, stage) C9: Añadido Patatas a s1
  | *   4280f65 (master) C8: resuelto conflicto manualmente
  | |\
  | | * 3bcfcf3 C6: borrada Leche desnatada, cambiado Tomate ecológico por Tomate Orlando
  | * | 9c0efad C7: cambiado Yoghourt griego por Yoghourt y eliminado Tomate ecológico
  | |/
  | *   d216140 C5: Merge branch 'bugFix'
  | |\
  | | * 1a45bcc C4: Cambiada Leche por Leche desnatada
  | |/
  |/|
  | * da2eda7 C3: añadida Fregona
  |/
  * 6ba8ad1 C2: creado s2
  * f0d7749 C1: creado s1

(AHORA EL COMMIT ESTA ACCESIBLE A TRAVES DE LA RAMA STAGE, PERO HEAD AUN NO ESTA
APUNTADO A LA RAMA STAGE)

7. git checkout stage
gitgraph
* 92a5004 (HEAD -> stage) C9: Añadido Patatas a s1
| *   4280f65 (master) C8: resuelto conflicto manualmente
| |\
| | * 3bcfcf3 C6: borrada Leche desnatada, cambiado Tomate ecológico por Tomate Orlando
| * | 9c0efad C7: cambiado Yoghourt griego por Yoghourt y eliminado Tomate ecológico
| |/
| *   d216140 C5: Merge branch 'bugFix'
| |\
| | * 1a45bcc C4: Cambiada Leche por Leche desnatada
| |/
|/|
| * da2eda7 C3: añadida Fregona
|/
* 6ba8ad1 C2: creado s2
* f0d7749 C1: creado s1

git branch
  master
* stage

(Ahora HEAD ya no está detached : apunta
a stage. Ahora si haces nuevos commits quedan en la rama stage.)

8. echo Manzanas >> s1
   git add s1
   git commit -m "C10: añadidas Manzanas a s1"

   gitgraph
   * e5e1718 (HEAD -> stage) C10: añadidas Manzanas a s1
   * 92a5004 C9: Añadido Patatas a s1
   | *   4280f65 (master) C8: resuelto conflicto manualmente
   | |\
   | | * 3bcfcf3 C6: borrada Leche desnatada, cambiado Tomate ecológico por Tomate Orlando
   | * | 9c0efad C7: cambiado Yoghourt griego por Yoghourt y eliminado Tomate ecológico
   | |/
   | *   d216140 C5: Merge branch 'bugFix'
   | |\
   | | * 1a45bcc C4: Cambiada Leche por Leche desnatada
   | |/
   |/|
   | * da2eda7 C3: añadida Fregona
   |/
   * 6ba8ad1 C2: creado s2
   * f0d7749 C1: creado s1

GIT STASH

1. gitgraph
   * e5e1718 (HEAD -> stage) C10: añadidas Manzanas a s1
   * 92a5004 C9: Añadido Patatas a s1
   | *   4280f65 (master) C8: resuelto conflicto manualmente
   | |\
   | | * 3bcfcf3 C6: borrada Leche desnatada, cambiado Tomate ecológico por Tomate Orlando
   | * | 9c0efad C7: cambiado Yoghourt griego por Yoghourt y eliminado Tomate ecológico
   | |/
   | *   d216140 C5: Merge branch 'bugFix'
   | |\
   | | * 1a45bcc C4: Cambiada Leche por Leche desnatada
   | |/
   |/|
   | * da2eda7 C3: añadida Fregona
   |/
   * 6ba8ad1 C2: creado s2
   * f0d7749 C1: creado s1

   git status
   En la rama stage
   nothing to commit, working directory clean

2. git checkout master

3. echo Peras >> s1
cbermejo@beta08:~/ISI/practicaISI-GIT/ejercicio-3$ cat s1
Tomate pelado
Tomate Orlando
Queso
Yoghourt griego
Fregona
Peras

4. git checkout stage
  error: Your local changes to the following files would be overwritten by checkout: s1
  Please, commit your changes or stash them before you can switch branches.
  Aborting

(NO NOS DEJA CAMBIAR A LA RAMA STAGE DEBIDO A QUE TENEMOS CAMBIOS EN LOCAL QUE SERIAN
SOBREESCRITOS POR EL CHECKOUT, TENEMOS QUE HACER COMMIT DE LOS CAMBIOS O 'STASH'
ANTES DE CAMBIAR DE RAMAS)

5. git stash
Saved working directory and index state WIP on master: 4280f65 C8: resuelto conflicto manualmente
HEAD is now at 4280f65 C8: resuelto conflicto manualmente
cbermejo@beta08:~/ISI/practicaISI-GIT/ejercicio-3$ cat s1
Tomate pelado
Tomate Orlando
Queso
Yoghourt griego
Fregona

***(Use git stash when you want to record the current state of the working directory and the index,
but want to go back to a clean working directory. The command saves your local
modifications away and reverts the working directory to match the HEAD commit.)***

6. git status
En la rama master
nothing to commit, working directory clean

7. git checkout stage
git branch
  master
* stage

8. git checkout master

9. git stash apply
En la rama master
Cambios no preparados para el commit:
  (use «git add <archivo>...» para actualizar lo que se confirmará)
  (use «git checkout -- <archivo>...» para descartar cambios en el directorio de trabajo)

	modificado:    s1

no hay cambios agregados al commit (use «git add» o «git commit -a»)
cbermejo@beta08:~/ISI/practicaISI-GIT/ejercicio-3$ cat s1
Tomate pelado
Tomate Orlando
Queso
Yoghourt griego
Fregona
Peras

(GIT STASH APPLY--> APLICAMOS LOS CAMBIOS QUE SALVAMOS CON GIT STASH, VEMOS QUE
VOLVEMOS A TENER LOS CAMBIOS EN EL AREA DE TRABAJO)

10. git add s1
    git commit -m "C11: ..."

gitgraph
* e813323 (HEAD -> master) C11: añadidas Peras a s1
| *   f33bc74 (refs/stash) WIP on master: 4280f65 C8: resuelto conflicto manualmente
| |\
|/ /
| * b4a97da index on master: 4280f65 C8: resuelto conflicto manualmente
|/
*   4280f65 C8: resuelto conflicto manualmente
|\
| * 3bcfcf3 C6: borrada Leche desnatada, cambiado Tomate ecológico por Tomate Orlando
* | 9c0efad C7: cambiado Yoghourt griego por Yoghourt y eliminado Tomate ecológico
|/
*   d216140 C5: Merge branch 'bugFix'
|\
| * 1a45bcc C4: Cambiada Leche por Leche desnatada
* | da2eda7 C3: añadida Fregona
|/
| * e5e1718 (stage) C10: añadidas Manzanas a s1
| * 92a5004 C9: Añadido Patatas a s1
|/
* 6ba8ad1 C2: creado s2
* f0d7749 C1: creado s1

11. git stash list
stash@{0}: WIP on master: 4280f65 C8: resuelto conflicto manualmente

(LO QUE SE AÑADE A STASH NO SE BORRA)

12. vim s1
    git stash
    Saved working directory and index state WIP on master: e813323 C11: añadidas Peras a s1
    HEAD is now at e813323 C11: añadidas Peras a s1

gitgraph
*   cb1313c (refs/stash) WIP on master: e813323 C11: añadidas Peras a s1
|\
| * 872e0c4 index on master: e813323 C11: añadidas Peras a s1
|/
* e813323 (HEAD -> master) C11: añadidas Peras a s1
*   4280f65 C8: resuelto conflicto manualmente
|\
| * 3bcfcf3 C6: borrada Leche desnatada, cambiado Tomate ecológico por Tomate Orlando
* | 9c0efad C7: cambiado Yoghourt griego por Yoghourt y eliminado Tomate ecológico
|/
*   d216140 C5: Merge branch 'bugFix'
|\
| * 1a45bcc C4: Cambiada Leche por Leche desnatada
* | da2eda7 C3: añadida Fregona
|/
| * e5e1718 (stage) C10: añadidas Manzanas a s1
| * 92a5004 C9: Añadido Patatas a s1
|/
* 6ba8ad1 C2: creado s2
* f0d7749 C1: creado s1

13. cbermejo@beta08:~/ISI/practicaISI-GIT/ejercicio-3$ git stash list
stash@{0}: WIP on master: e813323 C11: añadidas Peras a s1
stash@{1}: WIP on master: 4280f65 C8: resuelto conflicto manualmente

14. (GIT CLEAR PARA ELIMINAR TODAS LAS ENTRADAS)
(GIT STASH APPLY STASH@{1} PARA APLICAR UNA CONCRETA)
(GIT HELP STASH)
